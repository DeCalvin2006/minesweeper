{"version":3,"sources":["index.jsx"],"names":["DIR8","Square","props","className","onClick","value","Board","mineBuilt","state","mines","Array","fill","graph","clicked","openedCount","this","slice","i","m","Math","floor","random","j","element","x","y","nextM","setState","num","console","log","q","push","length","a","shift","status","handleClick","renderSquare","buildMines","renderRow","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bde2449.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// const DIR4 = [[1, 0], [-1, 0], [0, 1], [0, -1]];\nconst DIR8 = [[1, 1], [1, 0], [1, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [0, -1]];\n\nfunction Square(props) {\n    return (\n        <button className={props.className} onClick={() => props.onClick()}>\n            {props.value}\n        </button>\n    );\n\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mines: new Array(800).fill(\" \"),\n            graph: new Array(800).fill(\" \"),\n            clicked: new Array(800).fill(false),\n            openedCount: 0\n        };\n    }\n    mineBuilt = false;\n    buildMines() {\n        let mines = this.state.mines.slice();\n        for (let i = 0; i < 100; i++) {\n            let m = Math.floor(Math.random() * 10000) % 800;\n            if (mines[m] === \"X\") { i--; continue; }\n            mines[m] = \"X\";\n            for (let j = 0; j < 8; j++) {\n                let element = DIR8[j];\n                let [x, y] = [Math.floor(m / 20) + element[0], m % 20 + element[1]];\n                if (x >= 0 && x < 40 && y >= 0 && y < 20) {\n                    let nextM = x * 20 + y;\n                    if (mines[nextM] !== \"X\")\n                        if (mines[nextM] === \" \")\n                            mines[nextM] = 1;\n                        else\n                            mines[nextM]++;\n                }\n            }\n        }\n        this.setState(\n            { graph: this.state.graph, clicked: this.state.clicked, mines: mines }\n        )\n    }\n    handleClick(num) {\n        if (!this.state.clicked[num]) {\n            let graph = this.state.graph.slice();\n            let openedCount = this.state.openedCount;\n            let clicked = this.state.clicked.slice();\n            console.log(this.state.mines[num]);\n            let q = [];\n            q.push(num);\n            graph[num] = this.state.mines[num];\n            clicked[num] = true;\n            while (q.length > 0) {\n                let a = q.shift();\n                if (typeof (graph[a] === \"number\") && graph[a] !== \" \")\n                    continue;\n                openedCount++;\n                for (let i = 1; i < 8; i++) {\n                    let element = DIR8[i];\n                    let [x, y] = [Math.floor(a / 20) + element[0], a % 20 + element[1]];\n                    let nextM = x * 20 + y;\n                    console.log(`(Open ${nextM} => ${x},${y})`);\n                    if (x >= 0 && x < 40 && y >= 0 && y < 20 && !clicked[nextM] && this.state.mines[nextM] !== \"X\") {\n                        graph[nextM] = this.state.mines[nextM];\n                        clicked[nextM] = true;\n                        q.push(nextM);\n                    }\n                }\n            }\n            this.setState({ mines: this.state.mines, graph: graph, clicked: clicked, openedCount: openedCount });\n            if (openedCount === 200 - 20) this.setState({ status: \"Win\", clicked: this.state.clicked.fill(true), graph: this.state.mines, openedCount: openedCount })\n            if (this.state.mines[num] === \"X\") {\n                this.setState({ status: \"Fail\", clicked: this.state.clicked.fill(true), graph: this.state.mines, openedCount: openedCount })\n            }\n        }\n    }\n    renderSquare(i) {\n        return <Square className={this.state.clicked[i] ? \"square\" : \"square-black\"} value={this.state.graph[i]} onClick={() => (this.handleClick(i))} />;\n    }\n    renderRow(i) {\n        return (< div className=\"board-row\" >\n            {this.renderSquare(20 * i + 0)}\n            {this.renderSquare(20 * i + 1)}\n            {this.renderSquare(20 * i + 2)}\n            {this.renderSquare(20 * i + 3)}\n            {this.renderSquare(20 * i + 4)}\n            {this.renderSquare(20 * i + 5)}\n            {this.renderSquare(20 * i + 6)}\n            {this.renderSquare(20 * i + 7)}\n            {this.renderSquare(20 * i + 8)}\n            {this.renderSquare(20 * i + 9)}\n            {this.renderSquare(20 * i + 10)}\n            {this.renderSquare(20 * i + 11)}\n            {this.renderSquare(20 * i + 12)}\n            {this.renderSquare(20 * i + 13)}\n            {this.renderSquare(20 * i + 14)}\n            {this.renderSquare(20 * i + 15)}\n            {this.renderSquare(20 * i + 16)}\n            {this.renderSquare(20 * i + 17)}\n            {this.renderSquare(20 * i + 18)}\n            {this.renderSquare(20 * i + 19)}\n        </div >);\n    }\n    render() {\n        if (!this.mineBuilt) {\n            this.buildMines();\n            this.mineBuilt = true;\n        }\n        return (\n            <div>\n                <div className=\"status\">{this.state.status}{this.state.openedCount}</div>\n                {this.renderRow(0)}\n                {this.renderRow(1)}\n                {this.renderRow(2)}\n                {this.renderRow(3)}\n                {this.renderRow(4)}\n                {this.renderRow(5)}\n                {this.renderRow(6)}\n                {this.renderRow(7)}\n                {this.renderRow(8)}\n                {this.renderRow(9)}\n                {this.renderRow(10)}\n                {this.renderRow(11)}\n                {this.renderRow(12)}\n                {this.renderRow(13)}\n                {this.renderRow(14)}\n                {this.renderRow(15)}\n                {this.renderRow(16)}\n                {this.renderRow(17)}\n                {this.renderRow(18)}\n                {this.renderRow(19)}\n                {this.renderRow(20)}\n                {this.renderRow(21)}\n                {this.renderRow(22)}\n                {this.renderRow(23)}\n                {this.renderRow(24)}\n                {this.renderRow(25)}\n                {this.renderRow(26)}\n                {this.renderRow(27)}\n                {this.renderRow(28)}\n                {this.renderRow(29)}\n                {this.renderRow(30)}\n                {this.renderRow(31)}\n                {this.renderRow(32)}\n                {this.renderRow(33)}\n                {this.renderRow(34)}\n                {this.renderRow(35)}\n                {this.renderRow(36)}\n                {this.renderRow(37)}\n                {this.renderRow(38)}\n                {this.renderRow(39)}\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n                <div className=\"game-info\">\n                    <div>{/* status */}</div>\n                    <ol>{/* TODO */}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}